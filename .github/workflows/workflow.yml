name: CI/CD Workflow

env:
  PRERELEASE_BRANCHES: alpha,beta # Comma separated list of prerelease branch names. 'alpha,rc, ...'
  NUGET_OUTPUT: Artifacts/NuGet

on:
  push:
    branches:
    - '**'
  pull_request:
    types: [closed]

jobs:
  context:
    name: Establish Context
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.context.outputs.current-version }}
      should-publish: ${{ steps.context.outputs.should-publish }}
      release-type: ${{ steps.context.outputs.release-type }}
      pr-body: ${{ steps.context.outputs.pr-body }}
      pr-url: ${{ steps.context.outputs.pr-url }}
    steps:
    - uses: actions/checkout@v2
    - name: Establish context
      id: context
      uses: dolittle/establish-context-action@v2
      with:
        prerelease-branches: ${{ env.PRERELEASE_BRANCHES }}

  dot-net-ci:
    name: .NET CI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .Net
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: Build
      run: dotnet build --configuration Release

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [context, dot-net-ci]
    if: ${{ needs.context.outputs.should-publish == 'true'  }}

    outputs:
      version: ${{ steps.increment-version.outputs.next-version }}

    steps:
    - uses: actions/checkout@v2
    - name: Increment version
      id: increment-version
      uses: dolittle/increment-version-action@v2
      with:
        version: ${{ needs.context.outputs.version }}
        release-type: ${{ needs.context.outputs.release-type }}
    - name: Prepend to Changelog
      uses: dolittle/add-to-changelog-action@v2
      with:
        version: ${{ steps.increment-version.outputs.next-version }}
        body: ${{ needs.context.outputs.pr-body }}
        pr-url: ${{ needs.context.outputs.pr-url }}
        changelog-path: CHANGELOG.md
        user-email: build@dolittle.com
        user-name: dolittle-build
    - name: Create GitHub Release
      uses: dolittle/github-release-action@v2
      with:
        version: ${{ steps.increment-version.outputs.next-version }}
        body: ${{ needs.context.outputs.pr-body }}
  
  dot-net-cd:
    name: .NET CD
    runs-on: ubuntu-latest
    needs: [context, dot-net-ci, create-release]
    if: ${{ needs.context.outputs.should-publish == 'true'  }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup .Net
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'
    - name: Create packages
      run: dotnet pack --configuration Release -o ${{ env.NUGET_OUTPUT }} /p:PackageVersion=${{ needs.create-release.outputs.version }} -p:IncludeSymbols=true -p:SymbolPackageFormat=snupkg
    - name: Push NuGet packages
      run: dotnet nuget push --skip-duplicate '${{ env.NUGET_OUTPUT }}/*.nupkg' --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

  js-cd:
    name: JavaScript CD
    runs-on: ubuntu-latest
    needs: [context, create-release]
    if: ${{ needs.context.outputs.should-publish == 'true'  }}

    steps:
    - uses: actions/checkout@v2
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
        always-auth: true
    - name: Push NPM packages
      working-directory: ./Source/JavaScript
      run: npm publish --tag ${{ needs.create-release.outputs.version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
